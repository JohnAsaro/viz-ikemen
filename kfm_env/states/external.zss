[StateDef -4] # Global states (not halted by pause/superPause, no helper limitations)

if roundState != 2{ # While the match is not going on
    mapSet{map: "ext_command"; value: 0} # Assert no commands
}

#Assert commands based on mapping
if ctrl {
    #-| Super Moves |--------------------------------------------------------

    if map(ext_command) = 1{ # Triple Kung Fu Palm (req full super bar)
        assertCommand{name: "TripleKFPalm"; buffer.time: 1}
    }
    if map(ext_command) = 2{ # Smash Kung Fu Upper (req full super bar)
        assertCommand{name: "SmashKFUpper"; buffer.time: 1}
    }
    #-| Kung Fu Blocking (Parry) |------------------------------------------------------

    if map(ext_command) = 3{ # Kung Fu Blocking (Air/High)
        assertCommand{name: "blocking"; buffer.time: 1}
    }
    if map(ext_command) = 4{ # Kung Fu Blocking (Low)
        assertCommand{name: "blocking"; buffer.time: 1}
        assertCommand{name: "holddown"; buffer.time: 1}
    }

    #-| Special Moves |------------------------------------------------------

    # Kung Fu Upper

    if map(ext_command) = 5{ # Light KF Upper
        assertCommand{name: "upper_x"; buffer.time: 1}
    }
    if map(ext_command) = 6{ # Strong KF Upper
        assertCommand{name: "upper_y"; buffer.time: 1}
    }
    if map(ext_command) = 7{ # Fast KF Upper (req 1/3 super bar)
        assertCommand{name: "upper_xy"; buffer.time: 1}
    }

    # Kung Fu Palm

    if map(ext_command) = 8{ # Light KF Palm
        assertCommand{name: "QCF_x"; buffer.time: 1}
    }
    if map(ext_command) = 9{ # Strong KF Palm
        assertCommand{name: "QCF_y"; buffer.time: 1}
    }
    if map(ext_command) = 10{ # Fast KF Palm (req 1/3 super bar)
        assertCommand{name: "QCF_xy"; buffer.time: 1}
    }

    # Kung Fu Blow

    if map(ext_command) = 11{  # Light KF Blow 
        assertCommand{name: "QCB_x"; buffer.time: 1}
    }
    if map(ext_command) = 12{ # Strong KF Blow
        assertCommand{name: "QCB_y"; buffer.time: 1}
    }
    if map(ext_command) = 13{ # Fast KF Blow (req 1/3 super bar)
        assertCommand{name: "QCB_xy"; buffer.time: 1}
    }

    # Kung Fu Zankou

    if map(ext_command) = 14{ # Light KF Zankou
        assertCommand{name: "QCF_x"; buffer.time: 1}
    }
    if map(ext_command) = 15{ # Strong KF Zankou
        assertCommand{name: "QCF_y"; buffer.time: 1}
    }
    if map(ext_command) = 16{ # Fast KF Zankou (req 1/3 super bar)
        assertCommand{name: "QCF_xy"; buffer.time: 1}
    }

    # Kung Fu Knee

    if map(ext_command) = 17{ # Light KF Knee
        assertCommand{name: "FF_a"; buffer.time: 1}
    }
    if map(ext_command) = 18{ # Strong KF Knee
        assertCommand{name: "FF_b"; buffer.time: 1}
    }
    if map(ext_command) = 19{ # Fast KF Knee (req 1/3 super bar)
        assertCommand{name: "FF_ab"; buffer.time: 1}
    }

    #-| Run/Backdash |------------------------------------------------------

    if map(ext_command) = 20{ # Forward Run
        assertCommand{name: "FF"; buffer.time: 1} 
    }
    if map(ext_command) = 21{ # Backdash
        assertCommand{name: "BB"; buffer.time: 1}
    }

    #-| Recovery |-----------------------------------------------

    if map(ext_command) = 22{ # Recovery Command
        assertCommand{name: "recovery"; buffer.time: 1}
    }

    #-| Standing/Jumping Buttons/KF Knee Followup |---------------------------------------------------------

    if map(ext_command) = 23{ # Standing Light Punch (becomes jumping light punch in air)
        assertCommand{name: "a"; buffer.time: 1}
    }
    if map(ext_command) = 24{ # Standing Strong Punch (becomes jumping strong punch in air)
        assertCommand{name: "b"; buffer.time: 1}
    }

    if map(ext_command) = 25{ # Standing Light Kick (becomes jumping light kick in air/kick followup when done after KF knee)
        assertCommand{name: "x"; buffer.time: 1}
    }
    if map(ext_command) = 26{ # Standing Strong Kick (becomes jumping strong kick in air/kick followup when done after KF knee)
        assertCommand{name: "y"; buffer.time: 1}
    }

    #-| Crouching Buttons |---------------------------------------------------------

    if map(ext_command) = 27{ # Crouching Light Punch
        assertCommand{name: "a"; buffer.time: 1}
        assertCommand{name: "holddown"; buffer.time: 1}
    }
    if map(ext_command) = 28{ # Crouching Strong Punch
        assertCommand{name: "b"; buffer.time: 1}
        assertCommand{name: "holddown"; buffer.time: 1}
    }

    if map(ext_command) = 29{ # Crouching Light Kick
        assertCommand{name: "x"; buffer.time: 1}
        assertCommand{name: "holddown"; buffer.time: 1}
    }
    if map(ext_command) = 30{ # Crouching Strong Kick
        assertCommand{name: "y"; buffer.time: 1}
        assertCommand{name: "holddown"; buffer.time: 1}
    }

    #-| Taunt |---------------------------------------------------------

    if map(ext_command) = 31{ # Taunt
        assertCommand{name: "start"; buffer.time: 1}
    }

    #-| Throws |---------------------------------------------------------

    if map(ext_command) = 32{ # Forward Throw
        assertCommand{name: "holdfwd"; buffer.time: 1}
        assertCommand{name: "y"; buffer.time: 1}
    }
    if map(ext_command) = 33{ # Back Throw
        assertCommand{name: "holdback"; buffer.time: 1}
        assertCommand{name: "y"; buffer.time: 1}
    }

    #-| 8 Cardinal Directions |---------------------------------------------------------

    if map(ext_command) = 34{ # Walk Forward
        assertCommand{name: "holdfwd"; buffer.time: 1}
    }
    if map(ext_command) = 35{ # Walk Back
        assertCommand{name: "holdback"; buffer.time: 1}
    }
    if map(ext_command) = 36{ # Jump
        assertCommand{name: "holdup"; buffer.time: 1}
    }
    if map(ext_command) = 37{ # Crouch
        assertCommand{name: "holddown"; buffer.time: 1}
    }

    if map(ext_command) = 38{ # Jump Forward
        assertCommand{name: "holdfwd"; buffer.time: 1}
        assertCommand{name: "holdup"; buffer.time: 1}
    }
    if map(ext_command) = 39{ # Jump Back
        assertCommand{name: "holdback"; buffer.time: 1}
        assertCommand{name: "holdup"; buffer.time: 1}
    }
    if map(ext_command) = 40{ # Down Forward
        assertCommand{name: "holdfwd"; buffer.time: 1}
        assertCommand{name: "holddown"; buffer.time: 1}
    }
    if map(ext_command) = 41{ # Down Back
        assertCommand{name: "holdback"; buffer.time: 1}
        assertCommand{name: "holddown"; buffer.time: 1}
    }
}